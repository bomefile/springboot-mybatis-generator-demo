<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootmybatisdemo.mapper.UserStarWallEntityMapper">
  <resultMap id="BaseResultMap" type="com.example.springbootmybatisdemo.model.UserStarWallEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="star_wall_status" jdbcType="TINYINT" property="starWallStatus" />
    <result column="current_magic_value" jdbcType="INTEGER" property="currentMagicValue" />
    <result column="star_id" jdbcType="INTEGER" property="starId" />
    <result column="star_type" jdbcType="TINYINT" property="starType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_type, star_wall_status, current_magic_value, star_id, star_type, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_star_wall_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_star_wall_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.springbootmybatisdemo.model.UserStarWallEntity">
    insert into user_star_wall_record (id, user_id, user_type, 
      star_wall_status, current_magic_value, star_id, 
      star_type, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{userType,jdbcType=TINYINT}, 
      #{starWallStatus,jdbcType=TINYINT}, #{currentMagicValue,jdbcType=INTEGER}, #{starId,jdbcType=INTEGER}, 
      #{starType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springbootmybatisdemo.model.UserStarWallEntity">
    insert into user_star_wall_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="starWallStatus != null">
        star_wall_status,
      </if>
      <if test="currentMagicValue != null">
        current_magic_value,
      </if>
      <if test="starId != null">
        star_id,
      </if>
      <if test="starType != null">
        star_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="starWallStatus != null">
        #{starWallStatus,jdbcType=TINYINT},
      </if>
      <if test="currentMagicValue != null">
        #{currentMagicValue,jdbcType=INTEGER},
      </if>
      <if test="starId != null">
        #{starId,jdbcType=INTEGER},
      </if>
      <if test="starType != null">
        #{starType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update user_star_wall_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.starWallStatus != null">
        star_wall_status = #{record.starWallStatus,jdbcType=TINYINT},
      </if>
      <if test="record.currentMagicValue != null">
        current_magic_value = #{record.currentMagicValue,jdbcType=INTEGER},
      </if>
      <if test="record.starId != null">
        star_id = #{record.starId,jdbcType=INTEGER},
      </if>
      <if test="record.starType != null">
        star_type = #{record.starType,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_star_wall_record
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT},
      star_wall_status = #{record.starWallStatus,jdbcType=TINYINT},
      current_magic_value = #{record.currentMagicValue,jdbcType=INTEGER},
      star_id = #{record.starId,jdbcType=INTEGER},
      star_type = #{record.starType,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springbootmybatisdemo.model.UserStarWallEntity">
    update user_star_wall_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="starWallStatus != null">
        star_wall_status = #{starWallStatus,jdbcType=TINYINT},
      </if>
      <if test="currentMagicValue != null">
        current_magic_value = #{currentMagicValue,jdbcType=INTEGER},
      </if>
      <if test="starId != null">
        star_id = #{starId,jdbcType=INTEGER},
      </if>
      <if test="starType != null">
        star_type = #{starType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springbootmybatisdemo.model.UserStarWallEntity">
    update user_star_wall_record
    set user_id = #{userId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=TINYINT},
      star_wall_status = #{starWallStatus,jdbcType=TINYINT},
      current_magic_value = #{currentMagicValue,jdbcType=INTEGER},
      star_id = #{starId,jdbcType=INTEGER},
      star_type = #{starType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>